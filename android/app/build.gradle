apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"

/**
 * Configuration block for React Native Android app.
 */
react {
    // Uncomment and configure as needed
    // root = file("../")
    // reactNativeDir = file("../node_modules/react-native")
    // codegenDir = file("../node_modules/@react-native/codegen")
    // cliFile = file("../node_modules/react-native/cli.js")
    // debuggableVariants = ["liteDebug", "prodDebug"]
    // nodeExecutableAndArgs = ["node"]
    // bundleCommand = "ram-bundle"
    // bundleConfig = file(../rn-cli.config.js)
    // bundleAssetName = "MyApplication.android.bundle"
    // entryFile = file("../js/MyApplication.android.js")
    // extraPackagerArgs = []
    // hermesCommand = "$rootDir/my-custom-hermesc/bin/hermesc"
    // hermesFlags = ["-O", "-output-source-map"]
}

def enableProguardInReleaseBuilds = false
def jscFlavor = 'org.webkit:android-jsc:+'

android {
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    namespace "com.pos"
    defaultConfig {
        applicationId "com.pos"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.debug
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }

    sourceSets {
        main {
            java.srcDirs = ['src/main/java', 'src/main/aidl']
            aidl.srcDirs = ['src/main/aidl'] // 
        }
    }

    sourceSets.main {
        jniLibs.srcDir 'libs'
        jni.srcDirs = [] // disable automatic ndk-build call
    }
}

dependencies {
    // React Native dependencies
    implementation("com.facebook.react:react-android")

    // Hermes (Optional)
    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // AndroidX and Material Components
    // implementation 'androidx.appcompat:appcompat:1.4.1'
    // implementation 'com.google.android.material:material:1.6.0'
    // implementation 'androidx.annotation:annotation:1.7.0'
    // implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    // implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    // implementation 'androidx.cardview:cardview:1.0.0'

    // Testing dependencies
    // testImplementation 'junit:junit:4.13.2'
    // androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    // androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    // androidTestImplementation 'com.android.support.test:runner:1.0.2'

    // Other Dependencies
    // implementation 'com.github.PhilJay:MPAndroidChart:v3.0.2'
    // implementation 'com.pes.materialcolorpicker:library:1.0.2'
    // implementation 'com.leavjenn.smoothdaterangepicker:library:0.2.0'
    // implementation 'com.jaredrummler:material-spinner:1.3.1'
    // implementation 'commons-codec:commons-codec:1.13'
    // implementation 'com.squareup.okhttp3:okhttp:3.12.0'
    // implementation 'com.googlecode.json-simple:json-simple:1.1'
    // implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    // implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    // implementation 'com.squareup.okhttp3:logging-interceptor:3.8.0'
    // implementation "android.arch.persistence.room:runtime:1.1.1"
    // annotationProcessor "android.arch.persistence.room:compiler:1.1.1"


}

configurations {
    all*.exclude group: 'com.google.code.gson'
}

apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesAppBuildGradle(project)
